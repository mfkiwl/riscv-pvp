_: &default
  head: |
    #include "exception.h"
  env: RVTEST_RV64UV
  _templates: &_templates
    test_basic_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, ({vs3_shape[0]}/{nfields});
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a1, {vs3_data};        
        {ldins} {vreg}, (a1);
        la a2, test_{num}_data;
        {name} {vreg}, (a2);
        .pushsection .data, 1;
      test_{num}_data:
        .fill {vs3_shape[0]}, ({ebits}/8), 0;
        .popsection
    test_basic_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, ({vs3_shape[0]}/{nfields});
        vsetvli t0, a0, e{ebits},m1,tu,mu;
        la a1, {v0_data};
        {ldins_v0} v0, (a1);
        la a1, {vs3_data};        
        {ldins} {vreg}, (a1);
        la a2, test_{num}_data;
        {name} {vreg}, (a2), v0.t;
        .pushsection .data, 1;
      test_{num}_data:
        .fill {vs3_shape[0]}, ({ebits}/8), 0;
        .popsection

  diff:
    test_basic_without_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )
    test_basic_with_mask: np.allclose( result, golden, rtol=0, atol=0, equal_nan=True )    

vsseg2e32_v:
  <<: *default
  templates:
    <<: *_templates
    test_basic_without_mask @ vs3 @ nfields=2, ebits=32, vreg='v1', ldins='vlseg2e32.v': |
      {inherit}
    test_basic_with_mask @ vs3, v0 @ nfields=2, ebits=32, vreg='v1', ldins_v0='vle32.v', ldins='vlseg2e32.v': |
      {inherit}
  cases:
    test_basic_without_mask:
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ) ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 )]"
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ) ]" 
    test_basic_with_mask:
      - "[ np.linspace( -1000, 1000, 1*2, dtype=np.int32 ), random_mask(1) ]"
      - "[ np.linspace( -1000, 1000, 10*2, dtype=np.int32 ), random_mask(10) ]"
      - "[ np.linspace( -1000, 1000, 32*2, dtype=np.int32 ), random_mask(32) ]"        