_: &default
  env: RVTEST_RV64UV
  head: |
    #include "exception.h"
    #include "test_macros_v.h"

  _templates: &_templates
    test_vluxeix_v_without_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        la a1, {rs1_data};
        la a2, {rs2_data};
        la a3, test_{num}_data;

        vsetvli t0, a0, e{ebits},m1,tu,mu;
        {ldins} v2, (a2);
        {name} v1, (a1), v2;
        {stins} v1, (a3);
        {eqm}({res}, test_{num}_data, {vlen});
        .pushsection .data;
      test_{num}_data:
        .fill {vlen}, ({ebits}/8), 0;
        .popsection

    test_vluxeix_v_with_mask: |
      test_{num}:
        li TESTNUM, {num};
        li a0, {vlen};
        la a1, {rs1_data};
        la a2, {rs2_data};
        la a4, {mask_data};

        li t1, 8;
        remu t2, a0, t1;
        bnez t2, 1f;
        li t3,  {vlen} / 8;
        j 2f;
      1:
        li t3,  {vlen} / 8 + 1;
      2:
        vsetvli t0, t3, e8,m1,tu,mu;
        vle8.v v0, (a4);

        vsetvli t0, a0, e{ebits},m1,tu,mu;
        {ldins} v2, (a2);
        la a3, test_{num}_data;
        {name} v1, (a1), v2, v0.t;
        {stins} v1, (a3);
      
        {eqm}({res}, test_{num}_data, {vlen});
        .pushsection .data;
      test_{num}_data:
        .fill {vlen}, ({ebits}/8), 0;
        .popsection

vluxei8_v:
  templates:
    <<: *_templates
    test_vluxeix_v_without_mask @ rs1, rs2, vlen @ ebits=8, ldins='vle8.v', stins='vse8.v', eqm='VV_CHECK_EQ_INT8': |
      {inherit}
    test_vluxei8_v_with_mask @ rs1, rs2, mask, vlen @ ebits=8, ldins='vle8.v',stins='vse8.v', eqm='VV_CHECK_EQ_INT8': |
      {inherit}
  
  <<: *default

  cases:
    test_vluxeix_v_without_mask:
      - '[np.linspace(-128, 127, 4, dtype=np.int8), np.array([3, 1, 2, 0], dtype=np.uint8), 4]'
      - '[np.linspace(-128, 127, 14, dtype=np.int8), np.array([8, 7, 12, 2, 4, 0, 3, 5, 6, 10, 12, 13, 2, 1], dtype=np.uint8), 14]'
      - '[np.linspace(-128, 127, 128, dtype=np.int8), np.linspace(0, 64, 64, dtype=np.uint8), 64]'
      - '[np.linspace(-128, 127, 256, dtype=np.int8), np.linspace(0, 256, 128, dtype=np.uint8), 128]'

